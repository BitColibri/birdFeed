syntax = "proto3";
package bitcolibri.birdFeed.v1;

import "bitcolibri/birdFeed/v1/types.proto";
import "cosmos/query/v1/query.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/bitcolibri/birdFeed";

service Query {
  rpc GetTweet(QueryGetTweetRequest) returns (QueryGetTweetResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/bitcolibri/birdFeed/v1/tweet/{id}";
  }

  rpc GetAuthorTweets(QueryGetAuthorTweetsRequest) returns (QueryGetAuthorTweetsResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/bitcolibri/birdFeed/v1/author/{author}/tweets";
  }
}

message QueryGetTweetRequest {
  string id = 1;
}

message QueryGetTweetResponse {
  Tweet tweet = 1;
}

message QueryGetAuthorTweetsRequest {
  string author = 1;
}

message QueryGetAuthorTweetsResponse {
  repeated Tweet tweets = 1;
}
