// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package birdFeedv1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/cosmos/gogoproto/gogoproto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_QueryGetTweetRequest    protoreflect.MessageDescriptor
	fd_QueryGetTweetRequest_id protoreflect.FieldDescriptor
)

func init() {
	file_bitcolibri_birdFeed_v1_query_proto_init()
	md_QueryGetTweetRequest = File_bitcolibri_birdFeed_v1_query_proto.Messages().ByName("QueryGetTweetRequest")
	fd_QueryGetTweetRequest_id = md_QueryGetTweetRequest.Fields().ByName("id")
}

var _ protoreflect.Message = (*fastReflection_QueryGetTweetRequest)(nil)

type fastReflection_QueryGetTweetRequest QueryGetTweetRequest

func (x *QueryGetTweetRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetTweetRequest)(x)
}

func (x *QueryGetTweetRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_bitcolibri_birdFeed_v1_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetTweetRequest_messageType fastReflection_QueryGetTweetRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetTweetRequest_messageType{}

type fastReflection_QueryGetTweetRequest_messageType struct{}

func (x fastReflection_QueryGetTweetRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetTweetRequest)(nil)
}
func (x fastReflection_QueryGetTweetRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetTweetRequest)
}
func (x fastReflection_QueryGetTweetRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTweetRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetTweetRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTweetRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetTweetRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetTweetRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetTweetRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetTweetRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetTweetRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetTweetRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetTweetRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != "" {
		value := protoreflect.ValueOfString(x.Id)
		if !f(fd_QueryGetTweetRequest_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetTweetRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetTweetRequest.id":
		return x.Id != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetTweetRequest"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetTweetRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTweetRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetTweetRequest.id":
		x.Id = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetTweetRequest"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetTweetRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetTweetRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetTweetRequest.id":
		value := x.Id
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetTweetRequest"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetTweetRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTweetRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetTweetRequest.id":
		x.Id = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetTweetRequest"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetTweetRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTweetRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetTweetRequest.id":
		panic(fmt.Errorf("field id of message bitcolibri.birdFeed.v1.QueryGetTweetRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetTweetRequest"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetTweetRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetTweetRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetTweetRequest.id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetTweetRequest"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetTweetRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetTweetRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in bitcolibri.birdFeed.v1.QueryGetTweetRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetTweetRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTweetRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetTweetRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetTweetRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetTweetRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Id)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTweetRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Id) > 0 {
			i -= len(x.Id)
			copy(dAtA[i:], x.Id)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Id)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTweetRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTweetRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTweetRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Id = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetTweetResponse       protoreflect.MessageDescriptor
	fd_QueryGetTweetResponse_tweet protoreflect.FieldDescriptor
)

func init() {
	file_bitcolibri_birdFeed_v1_query_proto_init()
	md_QueryGetTweetResponse = File_bitcolibri_birdFeed_v1_query_proto.Messages().ByName("QueryGetTweetResponse")
	fd_QueryGetTweetResponse_tweet = md_QueryGetTweetResponse.Fields().ByName("tweet")
}

var _ protoreflect.Message = (*fastReflection_QueryGetTweetResponse)(nil)

type fastReflection_QueryGetTweetResponse QueryGetTweetResponse

func (x *QueryGetTweetResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetTweetResponse)(x)
}

func (x *QueryGetTweetResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_bitcolibri_birdFeed_v1_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetTweetResponse_messageType fastReflection_QueryGetTweetResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetTweetResponse_messageType{}

type fastReflection_QueryGetTweetResponse_messageType struct{}

func (x fastReflection_QueryGetTweetResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetTweetResponse)(nil)
}
func (x fastReflection_QueryGetTweetResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetTweetResponse)
}
func (x fastReflection_QueryGetTweetResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTweetResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetTweetResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTweetResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetTweetResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetTweetResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetTweetResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetTweetResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetTweetResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetTweetResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetTweetResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Tweet != nil {
		value := protoreflect.ValueOfMessage(x.Tweet.ProtoReflect())
		if !f(fd_QueryGetTweetResponse_tweet, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetTweetResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetTweetResponse.tweet":
		return x.Tweet != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetTweetResponse"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetTweetResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTweetResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetTweetResponse.tweet":
		x.Tweet = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetTweetResponse"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetTweetResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetTweetResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetTweetResponse.tweet":
		value := x.Tweet
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetTweetResponse"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetTweetResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTweetResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetTweetResponse.tweet":
		x.Tweet = value.Message().Interface().(*Tweet)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetTweetResponse"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetTweetResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTweetResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetTweetResponse.tweet":
		if x.Tweet == nil {
			x.Tweet = new(Tweet)
		}
		return protoreflect.ValueOfMessage(x.Tweet.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetTweetResponse"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetTweetResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetTweetResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetTweetResponse.tweet":
		m := new(Tweet)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetTweetResponse"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetTweetResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetTweetResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in bitcolibri.birdFeed.v1.QueryGetTweetResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetTweetResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTweetResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetTweetResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetTweetResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetTweetResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Tweet != nil {
			l = options.Size(x.Tweet)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTweetResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Tweet != nil {
			encoded, err := options.Marshal(x.Tweet)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTweetResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTweetResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTweetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Tweet", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Tweet == nil {
					x.Tweet = &Tweet{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Tweet); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetAuthorTweetsRequest        protoreflect.MessageDescriptor
	fd_QueryGetAuthorTweetsRequest_author protoreflect.FieldDescriptor
)

func init() {
	file_bitcolibri_birdFeed_v1_query_proto_init()
	md_QueryGetAuthorTweetsRequest = File_bitcolibri_birdFeed_v1_query_proto.Messages().ByName("QueryGetAuthorTweetsRequest")
	fd_QueryGetAuthorTweetsRequest_author = md_QueryGetAuthorTweetsRequest.Fields().ByName("author")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAuthorTweetsRequest)(nil)

type fastReflection_QueryGetAuthorTweetsRequest QueryGetAuthorTweetsRequest

func (x *QueryGetAuthorTweetsRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAuthorTweetsRequest)(x)
}

func (x *QueryGetAuthorTweetsRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_bitcolibri_birdFeed_v1_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAuthorTweetsRequest_messageType fastReflection_QueryGetAuthorTweetsRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAuthorTweetsRequest_messageType{}

type fastReflection_QueryGetAuthorTweetsRequest_messageType struct{}

func (x fastReflection_QueryGetAuthorTweetsRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAuthorTweetsRequest)(nil)
}
func (x fastReflection_QueryGetAuthorTweetsRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAuthorTweetsRequest)
}
func (x fastReflection_QueryGetAuthorTweetsRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAuthorTweetsRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAuthorTweetsRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAuthorTweetsRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAuthorTweetsRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAuthorTweetsRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAuthorTweetsRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetAuthorTweetsRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAuthorTweetsRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAuthorTweetsRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAuthorTweetsRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Author != "" {
		value := protoreflect.ValueOfString(x.Author)
		if !f(fd_QueryGetAuthorTweetsRequest_author, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAuthorTweetsRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest.author":
		return x.Author != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAuthorTweetsRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest.author":
		x.Author = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAuthorTweetsRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest.author":
		value := x.Author
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAuthorTweetsRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest.author":
		x.Author = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAuthorTweetsRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest.author":
		panic(fmt.Errorf("field author of message bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAuthorTweetsRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest.author":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAuthorTweetsRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAuthorTweetsRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAuthorTweetsRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAuthorTweetsRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAuthorTweetsRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAuthorTweetsRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Author)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAuthorTweetsRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Author) > 0 {
			i -= len(x.Author)
			copy(dAtA[i:], x.Author)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Author)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAuthorTweetsRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAuthorTweetsRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAuthorTweetsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Author", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Author = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryGetAuthorTweetsResponse_1_list)(nil)

type _QueryGetAuthorTweetsResponse_1_list struct {
	list *[]*Tweet
}

func (x *_QueryGetAuthorTweetsResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryGetAuthorTweetsResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryGetAuthorTweetsResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Tweet)
	(*x.list)[i] = concreteValue
}

func (x *_QueryGetAuthorTweetsResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Tweet)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryGetAuthorTweetsResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(Tweet)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryGetAuthorTweetsResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryGetAuthorTweetsResponse_1_list) NewElement() protoreflect.Value {
	v := new(Tweet)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryGetAuthorTweetsResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryGetAuthorTweetsResponse        protoreflect.MessageDescriptor
	fd_QueryGetAuthorTweetsResponse_tweets protoreflect.FieldDescriptor
)

func init() {
	file_bitcolibri_birdFeed_v1_query_proto_init()
	md_QueryGetAuthorTweetsResponse = File_bitcolibri_birdFeed_v1_query_proto.Messages().ByName("QueryGetAuthorTweetsResponse")
	fd_QueryGetAuthorTweetsResponse_tweets = md_QueryGetAuthorTweetsResponse.Fields().ByName("tweets")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAuthorTweetsResponse)(nil)

type fastReflection_QueryGetAuthorTweetsResponse QueryGetAuthorTweetsResponse

func (x *QueryGetAuthorTweetsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAuthorTweetsResponse)(x)
}

func (x *QueryGetAuthorTweetsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_bitcolibri_birdFeed_v1_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAuthorTweetsResponse_messageType fastReflection_QueryGetAuthorTweetsResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAuthorTweetsResponse_messageType{}

type fastReflection_QueryGetAuthorTweetsResponse_messageType struct{}

func (x fastReflection_QueryGetAuthorTweetsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAuthorTweetsResponse)(nil)
}
func (x fastReflection_QueryGetAuthorTweetsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAuthorTweetsResponse)
}
func (x fastReflection_QueryGetAuthorTweetsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAuthorTweetsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAuthorTweetsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAuthorTweetsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAuthorTweetsResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAuthorTweetsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAuthorTweetsResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetAuthorTweetsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAuthorTweetsResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAuthorTweetsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAuthorTweetsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Tweets) != 0 {
		value := protoreflect.ValueOfList(&_QueryGetAuthorTweetsResponse_1_list{list: &x.Tweets})
		if !f(fd_QueryGetAuthorTweetsResponse_tweets, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAuthorTweetsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse.tweets":
		return len(x.Tweets) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAuthorTweetsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse.tweets":
		x.Tweets = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAuthorTweetsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse.tweets":
		if len(x.Tweets) == 0 {
			return protoreflect.ValueOfList(&_QueryGetAuthorTweetsResponse_1_list{})
		}
		listValue := &_QueryGetAuthorTweetsResponse_1_list{list: &x.Tweets}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAuthorTweetsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse.tweets":
		lv := value.List()
		clv := lv.(*_QueryGetAuthorTweetsResponse_1_list)
		x.Tweets = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAuthorTweetsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse.tweets":
		if x.Tweets == nil {
			x.Tweets = []*Tweet{}
		}
		value := &_QueryGetAuthorTweetsResponse_1_list{list: &x.Tweets}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAuthorTweetsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse.tweets":
		list := []*Tweet{}
		return protoreflect.ValueOfList(&_QueryGetAuthorTweetsResponse_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse"))
		}
		panic(fmt.Errorf("message bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAuthorTweetsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAuthorTweetsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAuthorTweetsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAuthorTweetsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAuthorTweetsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAuthorTweetsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Tweets) > 0 {
			for _, e := range x.Tweets {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAuthorTweetsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Tweets) > 0 {
			for iNdEx := len(x.Tweets) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Tweets[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAuthorTweetsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAuthorTweetsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAuthorTweetsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Tweets", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Tweets = append(x.Tweets, &Tweet{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Tweets[len(x.Tweets)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: bitcolibri/birdFeed/v1/query.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryGetTweetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryGetTweetRequest) Reset() {
	*x = QueryGetTweetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitcolibri_birdFeed_v1_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetTweetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetTweetRequest) ProtoMessage() {}

// Deprecated: Use QueryGetTweetRequest.ProtoReflect.Descriptor instead.
func (*QueryGetTweetRequest) Descriptor() ([]byte, []int) {
	return file_bitcolibri_birdFeed_v1_query_proto_rawDescGZIP(), []int{0}
}

func (x *QueryGetTweetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type QueryGetTweetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tweet *Tweet `protobuf:"bytes,1,opt,name=tweet,proto3" json:"tweet,omitempty"`
}

func (x *QueryGetTweetResponse) Reset() {
	*x = QueryGetTweetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitcolibri_birdFeed_v1_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetTweetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetTweetResponse) ProtoMessage() {}

// Deprecated: Use QueryGetTweetResponse.ProtoReflect.Descriptor instead.
func (*QueryGetTweetResponse) Descriptor() ([]byte, []int) {
	return file_bitcolibri_birdFeed_v1_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryGetTweetResponse) GetTweet() *Tweet {
	if x != nil {
		return x.Tweet
	}
	return nil
}

type QueryGetAuthorTweetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Author string `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
}

func (x *QueryGetAuthorTweetsRequest) Reset() {
	*x = QueryGetAuthorTweetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitcolibri_birdFeed_v1_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAuthorTweetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAuthorTweetsRequest) ProtoMessage() {}

// Deprecated: Use QueryGetAuthorTweetsRequest.ProtoReflect.Descriptor instead.
func (*QueryGetAuthorTweetsRequest) Descriptor() ([]byte, []int) {
	return file_bitcolibri_birdFeed_v1_query_proto_rawDescGZIP(), []int{2}
}

func (x *QueryGetAuthorTweetsRequest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

type QueryGetAuthorTweetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tweets []*Tweet `protobuf:"bytes,1,rep,name=tweets,proto3" json:"tweets,omitempty"`
}

func (x *QueryGetAuthorTweetsResponse) Reset() {
	*x = QueryGetAuthorTweetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitcolibri_birdFeed_v1_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAuthorTweetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAuthorTweetsResponse) ProtoMessage() {}

// Deprecated: Use QueryGetAuthorTweetsResponse.ProtoReflect.Descriptor instead.
func (*QueryGetAuthorTweetsResponse) Descriptor() ([]byte, []int) {
	return file_bitcolibri_birdFeed_v1_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryGetAuthorTweetsResponse) GetTweets() []*Tweet {
	if x != nil {
		return x.Tweets
	}
	return nil
}

var File_bitcolibri_birdFeed_v1_query_proto protoreflect.FileDescriptor

var file_bitcolibri_birdFeed_v1_query_proto_rawDesc = []byte{
	0x0a, 0x22, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2f, 0x62, 0x69, 0x72,
	0x64, 0x46, 0x65, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x62, 0x69, 0x72, 0x64, 0x46, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x22, 0x62, 0x69,
	0x74, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2f, 0x62, 0x69, 0x72, 0x64, 0x46, 0x65, 0x65,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76,
	0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67,
	0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x26, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x15, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x74, 0x77, 0x65, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x62,
	0x69, 0x72, 0x64, 0x46, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74,
	0x52, 0x05, 0x74, 0x77, 0x65, 0x65, 0x74, 0x22, 0x35, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x54, 0x77, 0x65, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x22, 0x55,
	0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x54, 0x77, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x06, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x62, 0x69, 0x72, 0x64,
	0x46, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x06, 0x74,
	0x77, 0x65, 0x65, 0x74, 0x73, 0x32, 0xde, 0x02, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x98, 0x01, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x12, 0x2c, 0x2e, 0x62,
	0x69, 0x74, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x46, 0x65,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x77,
	0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x62, 0x69, 0x74,
	0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x46, 0x65, 0x65, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x88, 0xe7, 0xb0, 0x2a, 0x01,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2f, 0x62, 0x69, 0x72, 0x64, 0x46, 0x65, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x77, 0x65, 0x65, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xb9, 0x01, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x54, 0x77, 0x65, 0x65, 0x74, 0x73, 0x12, 0x33,
	0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x62, 0x69, 0x72, 0x64,
	0x46, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x54, 0x77, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x62, 0x69, 0x72, 0x64, 0x46, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x54, 0x77, 0x65, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x88, 0xe7, 0xb0, 0x2a, 0x01,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2f, 0x62, 0x69, 0x72, 0x64, 0x46, 0x65, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x2f, 0x7b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x7d, 0x2f,
	0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x42, 0xe8, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x62,
	0x69, 0x74, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x46, 0x65,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x62, 0x69, 0x74, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2f, 0x62, 0x69, 0x72, 0x64, 0x46,
	0x65, 0x65, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x6c, 0x69, 0x62,
	0x72, 0x69, 0x2f, 0x62, 0x69, 0x72, 0x64, 0x46, 0x65, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x62,
	0x69, 0x72, 0x64, 0x46, 0x65, 0x65, 0x64, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x42, 0x42, 0x58, 0xaa,
	0x02, 0x16, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x42, 0x69, 0x72,
	0x64, 0x46, 0x65, 0x65, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x16, 0x42, 0x69, 0x74, 0x63, 0x6f,
	0x6c, 0x69, 0x62, 0x72, 0x69, 0x5c, 0x42, 0x69, 0x72, 0x64, 0x46, 0x65, 0x65, 0x64, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x22, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x5c, 0x42,
	0x69, 0x72, 0x64, 0x46, 0x65, 0x65, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x18, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x3a, 0x3a, 0x42, 0x69, 0x72, 0x64, 0x46, 0x65, 0x65, 0x64, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bitcolibri_birdFeed_v1_query_proto_rawDescOnce sync.Once
	file_bitcolibri_birdFeed_v1_query_proto_rawDescData = file_bitcolibri_birdFeed_v1_query_proto_rawDesc
)

func file_bitcolibri_birdFeed_v1_query_proto_rawDescGZIP() []byte {
	file_bitcolibri_birdFeed_v1_query_proto_rawDescOnce.Do(func() {
		file_bitcolibri_birdFeed_v1_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_bitcolibri_birdFeed_v1_query_proto_rawDescData)
	})
	return file_bitcolibri_birdFeed_v1_query_proto_rawDescData
}

var file_bitcolibri_birdFeed_v1_query_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_bitcolibri_birdFeed_v1_query_proto_goTypes = []interface{}{
	(*QueryGetTweetRequest)(nil),         // 0: bitcolibri.birdFeed.v1.QueryGetTweetRequest
	(*QueryGetTweetResponse)(nil),        // 1: bitcolibri.birdFeed.v1.QueryGetTweetResponse
	(*QueryGetAuthorTweetsRequest)(nil),  // 2: bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest
	(*QueryGetAuthorTweetsResponse)(nil), // 3: bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse
	(*Tweet)(nil),                        // 4: bitcolibri.birdFeed.v1.Tweet
}
var file_bitcolibri_birdFeed_v1_query_proto_depIdxs = []int32{
	4, // 0: bitcolibri.birdFeed.v1.QueryGetTweetResponse.tweet:type_name -> bitcolibri.birdFeed.v1.Tweet
	4, // 1: bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse.tweets:type_name -> bitcolibri.birdFeed.v1.Tweet
	0, // 2: bitcolibri.birdFeed.v1.Query.GetTweet:input_type -> bitcolibri.birdFeed.v1.QueryGetTweetRequest
	2, // 3: bitcolibri.birdFeed.v1.Query.GetAuthorTweets:input_type -> bitcolibri.birdFeed.v1.QueryGetAuthorTweetsRequest
	1, // 4: bitcolibri.birdFeed.v1.Query.GetTweet:output_type -> bitcolibri.birdFeed.v1.QueryGetTweetResponse
	3, // 5: bitcolibri.birdFeed.v1.Query.GetAuthorTweets:output_type -> bitcolibri.birdFeed.v1.QueryGetAuthorTweetsResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_bitcolibri_birdFeed_v1_query_proto_init() }
func file_bitcolibri_birdFeed_v1_query_proto_init() {
	if File_bitcolibri_birdFeed_v1_query_proto != nil {
		return
	}
	file_bitcolibri_birdFeed_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bitcolibri_birdFeed_v1_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetTweetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitcolibri_birdFeed_v1_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetTweetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitcolibri_birdFeed_v1_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAuthorTweetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitcolibri_birdFeed_v1_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAuthorTweetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bitcolibri_birdFeed_v1_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bitcolibri_birdFeed_v1_query_proto_goTypes,
		DependencyIndexes: file_bitcolibri_birdFeed_v1_query_proto_depIdxs,
		MessageInfos:      file_bitcolibri_birdFeed_v1_query_proto_msgTypes,
	}.Build()
	File_bitcolibri_birdFeed_v1_query_proto = out.File
	file_bitcolibri_birdFeed_v1_query_proto_rawDesc = nil
	file_bitcolibri_birdFeed_v1_query_proto_goTypes = nil
	file_bitcolibri_birdFeed_v1_query_proto_depIdxs = nil
}
