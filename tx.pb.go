// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bitcolibri/birdFeed/v1/tx.proto

package birdFeed

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgInitUser struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Alias   string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Picture string `protobuf:"bytes,3,opt,name=picture,proto3" json:"picture,omitempty"`
}

func (m *MsgInitUser) Reset()         { *m = MsgInitUser{} }
func (m *MsgInitUser) String() string { return proto.CompactTextString(m) }
func (*MsgInitUser) ProtoMessage()    {}
func (*MsgInitUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f91cdd7d19f98c, []int{0}
}
func (m *MsgInitUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitUser.Merge(m, src)
}
func (m *MsgInitUser) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitUser) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitUser.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitUser proto.InternalMessageInfo

func (m *MsgInitUser) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgInitUser) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *MsgInitUser) GetPicture() string {
	if m != nil {
		return m.Picture
	}
	return ""
}

type MsgInitUserResponse struct {
}

func (m *MsgInitUserResponse) Reset()         { *m = MsgInitUserResponse{} }
func (m *MsgInitUserResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInitUserResponse) ProtoMessage()    {}
func (*MsgInitUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f91cdd7d19f98c, []int{1}
}
func (m *MsgInitUserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitUserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitUserResponse.Merge(m, src)
}
func (m *MsgInitUserResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitUserResponse proto.InternalMessageInfo

type MsgFollowUser struct {
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (m *MsgFollowUser) Reset()         { *m = MsgFollowUser{} }
func (m *MsgFollowUser) String() string { return proto.CompactTextString(m) }
func (*MsgFollowUser) ProtoMessage()    {}
func (*MsgFollowUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f91cdd7d19f98c, []int{2}
}
func (m *MsgFollowUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFollowUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFollowUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFollowUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFollowUser.Merge(m, src)
}
func (m *MsgFollowUser) XXX_Size() int {
	return m.Size()
}
func (m *MsgFollowUser) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFollowUser.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFollowUser proto.InternalMessageInfo

func (m *MsgFollowUser) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MsgFollowUser) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

type MsgFollowUserResponse struct {
}

func (m *MsgFollowUserResponse) Reset()         { *m = MsgFollowUserResponse{} }
func (m *MsgFollowUserResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFollowUserResponse) ProtoMessage()    {}
func (*MsgFollowUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f91cdd7d19f98c, []int{3}
}
func (m *MsgFollowUserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFollowUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFollowUserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFollowUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFollowUserResponse.Merge(m, src)
}
func (m *MsgFollowUserResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFollowUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFollowUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFollowUserResponse proto.InternalMessageInfo

type MsgUnfollowUser struct {
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (m *MsgUnfollowUser) Reset()         { *m = MsgUnfollowUser{} }
func (m *MsgUnfollowUser) String() string { return proto.CompactTextString(m) }
func (*MsgUnfollowUser) ProtoMessage()    {}
func (*MsgUnfollowUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f91cdd7d19f98c, []int{4}
}
func (m *MsgUnfollowUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnfollowUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnfollowUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnfollowUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnfollowUser.Merge(m, src)
}
func (m *MsgUnfollowUser) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnfollowUser) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnfollowUser.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnfollowUser proto.InternalMessageInfo

func (m *MsgUnfollowUser) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MsgUnfollowUser) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

type MsgUnfollowUserResponse struct {
}

func (m *MsgUnfollowUserResponse) Reset()         { *m = MsgUnfollowUserResponse{} }
func (m *MsgUnfollowUserResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUnfollowUserResponse) ProtoMessage()    {}
func (*MsgUnfollowUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f91cdd7d19f98c, []int{5}
}
func (m *MsgUnfollowUserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnfollowUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnfollowUserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnfollowUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnfollowUserResponse.Merge(m, src)
}
func (m *MsgUnfollowUserResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnfollowUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnfollowUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnfollowUserResponse proto.InternalMessageInfo

type MsgPublishTweet struct {
	// creator is the message sender.
	Author   string   `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	Content  string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Hashtags []string `protobuf:"bytes,3,rep,name=hashtags,proto3" json:"hashtags,omitempty"`
}

func (m *MsgPublishTweet) Reset()         { *m = MsgPublishTweet{} }
func (m *MsgPublishTweet) String() string { return proto.CompactTextString(m) }
func (*MsgPublishTweet) ProtoMessage()    {}
func (*MsgPublishTweet) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f91cdd7d19f98c, []int{6}
}
func (m *MsgPublishTweet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPublishTweet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPublishTweet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPublishTweet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPublishTweet.Merge(m, src)
}
func (m *MsgPublishTweet) XXX_Size() int {
	return m.Size()
}
func (m *MsgPublishTweet) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPublishTweet.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPublishTweet proto.InternalMessageInfo

func (m *MsgPublishTweet) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *MsgPublishTweet) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *MsgPublishTweet) GetHashtags() []string {
	if m != nil {
		return m.Hashtags
	}
	return nil
}

// MsgCreateGameResponse defines the Msg/CreateGame response type.
type MsgPublishTweetResponse struct {
}

func (m *MsgPublishTweetResponse) Reset()         { *m = MsgPublishTweetResponse{} }
func (m *MsgPublishTweetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPublishTweetResponse) ProtoMessage()    {}
func (*MsgPublishTweetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f91cdd7d19f98c, []int{7}
}
func (m *MsgPublishTweetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPublishTweetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPublishTweetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPublishTweetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPublishTweetResponse.Merge(m, src)
}
func (m *MsgPublishTweetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPublishTweetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPublishTweetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPublishTweetResponse proto.InternalMessageInfo

type MsgRemoveTweet struct {
	Author  string `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	TweetID string `protobuf:"bytes,2,opt,name=tweetID,proto3" json:"tweetID,omitempty"`
}

func (m *MsgRemoveTweet) Reset()         { *m = MsgRemoveTweet{} }
func (m *MsgRemoveTweet) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveTweet) ProtoMessage()    {}
func (*MsgRemoveTweet) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f91cdd7d19f98c, []int{8}
}
func (m *MsgRemoveTweet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveTweet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveTweet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveTweet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveTweet.Merge(m, src)
}
func (m *MsgRemoveTweet) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveTweet) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveTweet.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveTweet proto.InternalMessageInfo

func (m *MsgRemoveTweet) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *MsgRemoveTweet) GetTweetID() string {
	if m != nil {
		return m.TweetID
	}
	return ""
}

type MsgRemoveTweetResponse struct {
}

func (m *MsgRemoveTweetResponse) Reset()         { *m = MsgRemoveTweetResponse{} }
func (m *MsgRemoveTweetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveTweetResponse) ProtoMessage()    {}
func (*MsgRemoveTweetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f91cdd7d19f98c, []int{9}
}
func (m *MsgRemoveTweetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveTweetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveTweetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveTweetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveTweetResponse.Merge(m, src)
}
func (m *MsgRemoveTweetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveTweetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveTweetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveTweetResponse proto.InternalMessageInfo

type MsgLikeTweet struct {
	From    string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	TweetID string `protobuf:"bytes,2,opt,name=tweetID,proto3" json:"tweetID,omitempty"`
}

func (m *MsgLikeTweet) Reset()         { *m = MsgLikeTweet{} }
func (m *MsgLikeTweet) String() string { return proto.CompactTextString(m) }
func (*MsgLikeTweet) ProtoMessage()    {}
func (*MsgLikeTweet) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f91cdd7d19f98c, []int{10}
}
func (m *MsgLikeTweet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLikeTweet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLikeTweet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLikeTweet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLikeTweet.Merge(m, src)
}
func (m *MsgLikeTweet) XXX_Size() int {
	return m.Size()
}
func (m *MsgLikeTweet) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLikeTweet.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLikeTweet proto.InternalMessageInfo

func (m *MsgLikeTweet) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MsgLikeTweet) GetTweetID() string {
	if m != nil {
		return m.TweetID
	}
	return ""
}

type MsgLikeTweetResponse struct {
}

func (m *MsgLikeTweetResponse) Reset()         { *m = MsgLikeTweetResponse{} }
func (m *MsgLikeTweetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgLikeTweetResponse) ProtoMessage()    {}
func (*MsgLikeTweetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f91cdd7d19f98c, []int{11}
}
func (m *MsgLikeTweetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLikeTweetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLikeTweetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLikeTweetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLikeTweetResponse.Merge(m, src)
}
func (m *MsgLikeTweetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgLikeTweetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLikeTweetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLikeTweetResponse proto.InternalMessageInfo

type MsgUnlikeTweet struct {
	From    string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	TweetID string `protobuf:"bytes,2,opt,name=tweetID,proto3" json:"tweetID,omitempty"`
}

func (m *MsgUnlikeTweet) Reset()         { *m = MsgUnlikeTweet{} }
func (m *MsgUnlikeTweet) String() string { return proto.CompactTextString(m) }
func (*MsgUnlikeTweet) ProtoMessage()    {}
func (*MsgUnlikeTweet) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f91cdd7d19f98c, []int{12}
}
func (m *MsgUnlikeTweet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnlikeTweet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnlikeTweet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnlikeTweet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnlikeTweet.Merge(m, src)
}
func (m *MsgUnlikeTweet) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnlikeTweet) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnlikeTweet.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnlikeTweet proto.InternalMessageInfo

func (m *MsgUnlikeTweet) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MsgUnlikeTweet) GetTweetID() string {
	if m != nil {
		return m.TweetID
	}
	return ""
}

type MsgUnlikeTweetResponse struct {
}

func (m *MsgUnlikeTweetResponse) Reset()         { *m = MsgUnlikeTweetResponse{} }
func (m *MsgUnlikeTweetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUnlikeTweetResponse) ProtoMessage()    {}
func (*MsgUnlikeTweetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f91cdd7d19f98c, []int{13}
}
func (m *MsgUnlikeTweetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnlikeTweetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnlikeTweetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnlikeTweetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnlikeTweetResponse.Merge(m, src)
}
func (m *MsgUnlikeTweetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnlikeTweetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnlikeTweetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnlikeTweetResponse proto.InternalMessageInfo

type MsgCommentTweet struct {
	Author   string   `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	Content  string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Hashtags []string `protobuf:"bytes,3,rep,name=hashtags,proto3" json:"hashtags,omitempty"`
	TweetID  string   `protobuf:"bytes,4,opt,name=tweetID,proto3" json:"tweetID,omitempty"`
}

func (m *MsgCommentTweet) Reset()         { *m = MsgCommentTweet{} }
func (m *MsgCommentTweet) String() string { return proto.CompactTextString(m) }
func (*MsgCommentTweet) ProtoMessage()    {}
func (*MsgCommentTweet) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f91cdd7d19f98c, []int{14}
}
func (m *MsgCommentTweet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCommentTweet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCommentTweet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCommentTweet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCommentTweet.Merge(m, src)
}
func (m *MsgCommentTweet) XXX_Size() int {
	return m.Size()
}
func (m *MsgCommentTweet) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCommentTweet.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCommentTweet proto.InternalMessageInfo

func (m *MsgCommentTweet) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *MsgCommentTweet) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *MsgCommentTweet) GetHashtags() []string {
	if m != nil {
		return m.Hashtags
	}
	return nil
}

func (m *MsgCommentTweet) GetTweetID() string {
	if m != nil {
		return m.TweetID
	}
	return ""
}

type MsgCommentTweetResponse struct {
}

func (m *MsgCommentTweetResponse) Reset()         { *m = MsgCommentTweetResponse{} }
func (m *MsgCommentTweetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCommentTweetResponse) ProtoMessage()    {}
func (*MsgCommentTweetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4f91cdd7d19f98c, []int{15}
}
func (m *MsgCommentTweetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCommentTweetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCommentTweetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCommentTweetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCommentTweetResponse.Merge(m, src)
}
func (m *MsgCommentTweetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCommentTweetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCommentTweetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCommentTweetResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgInitUser)(nil), "bitcolibri.birdFeed.v1.MsgInitUser")
	proto.RegisterType((*MsgInitUserResponse)(nil), "bitcolibri.birdFeed.v1.MsgInitUserResponse")
	proto.RegisterType((*MsgFollowUser)(nil), "bitcolibri.birdFeed.v1.MsgFollowUser")
	proto.RegisterType((*MsgFollowUserResponse)(nil), "bitcolibri.birdFeed.v1.MsgFollowUserResponse")
	proto.RegisterType((*MsgUnfollowUser)(nil), "bitcolibri.birdFeed.v1.MsgUnfollowUser")
	proto.RegisterType((*MsgUnfollowUserResponse)(nil), "bitcolibri.birdFeed.v1.MsgUnfollowUserResponse")
	proto.RegisterType((*MsgPublishTweet)(nil), "bitcolibri.birdFeed.v1.MsgPublishTweet")
	proto.RegisterType((*MsgPublishTweetResponse)(nil), "bitcolibri.birdFeed.v1.MsgPublishTweetResponse")
	proto.RegisterType((*MsgRemoveTweet)(nil), "bitcolibri.birdFeed.v1.MsgRemoveTweet")
	proto.RegisterType((*MsgRemoveTweetResponse)(nil), "bitcolibri.birdFeed.v1.MsgRemoveTweetResponse")
	proto.RegisterType((*MsgLikeTweet)(nil), "bitcolibri.birdFeed.v1.MsgLikeTweet")
	proto.RegisterType((*MsgLikeTweetResponse)(nil), "bitcolibri.birdFeed.v1.MsgLikeTweetResponse")
	proto.RegisterType((*MsgUnlikeTweet)(nil), "bitcolibri.birdFeed.v1.MsgUnlikeTweet")
	proto.RegisterType((*MsgUnlikeTweetResponse)(nil), "bitcolibri.birdFeed.v1.MsgUnlikeTweetResponse")
	proto.RegisterType((*MsgCommentTweet)(nil), "bitcolibri.birdFeed.v1.MsgCommentTweet")
	proto.RegisterType((*MsgCommentTweetResponse)(nil), "bitcolibri.birdFeed.v1.MsgCommentTweetResponse")
}

func init() { proto.RegisterFile("bitcolibri/birdFeed/v1/tx.proto", fileDescriptor_d4f91cdd7d19f98c) }

var fileDescriptor_d4f91cdd7d19f98c = []byte{
	// 611 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x8d, 0x93, 0x36, 0x34, 0x93, 0x50, 0x24, 0x93, 0x26, 0xae, 0x0f, 0xa6, 0x0a, 0x50, 0xaa,
	0x02, 0xb6, 0x0a, 0x17, 0x94, 0x03, 0x42, 0x80, 0x8a, 0x22, 0x61, 0x81, 0x22, 0x72, 0x41, 0x48,
	0x95, 0x9d, 0x6c, 0xd7, 0x16, 0xb6, 0x37, 0xf2, 0x6e, 0x52, 0x8e, 0x88, 0x03, 0x67, 0x7e, 0x4a,
	0xef, 0xfc, 0x01, 0x8e, 0x3d, 0x72, 0x44, 0xc9, 0xa1, 0x7f, 0x03, 0xf9, 0x6b, 0xb3, 0x46, 0xc6,
	0x44, 0x20, 0x6e, 0x79, 0xbb, 0x6f, 0xde, 0x9b, 0x9d, 0xd1, 0x8b, 0xe1, 0x86, 0xed, 0xb2, 0x31,
	0xf1, 0x5c, 0x3b, 0x74, 0x0d, 0xdb, 0x0d, 0x27, 0xc7, 0x08, 0x4d, 0x8c, 0xf9, 0x91, 0xc1, 0x3e,
	0xe8, 0xd3, 0x90, 0x30, 0x22, 0x77, 0x56, 0x04, 0x3d, 0x23, 0xe8, 0xf3, 0x23, 0xb5, 0x3b, 0x26,
	0xd4, 0x27, 0xd4, 0xf0, 0x29, 0x8e, 0xf8, 0x3e, 0xc5, 0x49, 0x81, 0xba, 0x9b, 0x5c, 0x9c, 0xc4,
	0xc8, 0x48, 0x40, 0x7a, 0xd5, 0xc6, 0x04, 0x93, 0xe4, 0x3c, 0xfa, 0x95, 0x9c, 0xf6, 0x10, 0x34,
	0x4d, 0x8a, 0x07, 0x81, 0xcb, 0x46, 0x14, 0x85, 0xb2, 0x02, 0x57, 0xac, 0xc9, 0x24, 0x44, 0x94,
	0x2a, 0xd2, 0x9e, 0x74, 0xd0, 0x18, 0x66, 0x50, 0x6e, 0xc3, 0xa6, 0xe5, 0xb9, 0x16, 0x55, 0xaa,
	0xf1, 0x79, 0x02, 0x22, 0xfe, 0xd4, 0x1d, 0xb3, 0x59, 0x88, 0x94, 0x5a, 0xc2, 0x4f, 0x61, 0xbf,
	0xf5, 0xe9, 0xf2, 0xfc, 0x30, 0xab, 0xee, 0xed, 0xc0, 0x75, 0xc1, 0x66, 0x88, 0xe8, 0x94, 0x04,
	0x14, 0xf5, 0x1e, 0xc3, 0x55, 0x93, 0xe2, 0x63, 0xe2, 0x79, 0xe4, 0x2c, 0xf6, 0x97, 0x61, 0xe3,
	0x34, 0x24, 0x7e, 0x6a, 0x1e, 0xff, 0x96, 0xb7, 0xa1, 0xca, 0x48, 0x6a, 0x5b, 0x65, 0xa4, 0xdf,
	0x88, 0x94, 0xe3, 0xab, 0x5e, 0x17, 0x76, 0x72, 0xf5, 0x5c, 0xf8, 0x09, 0x5c, 0x33, 0x29, 0x1e,
	0x05, 0xa7, 0x7f, 0x2d, 0xbd, 0x0b, 0xdd, 0x5f, 0x14, 0xb8, 0xb8, 0x17, 0x8b, 0xbf, 0x9e, 0xd9,
	0x9e, 0x4b, 0x9d, 0x37, 0x67, 0x08, 0x31, 0xb9, 0x03, 0x75, 0x6b, 0xc6, 0x1c, 0x12, 0xa6, 0xf2,
	0x29, 0x8a, 0xe6, 0x33, 0x26, 0x01, 0x43, 0x01, 0x4b, 0x5d, 0x32, 0x28, 0xab, 0xb0, 0xe5, 0x58,
	0xd4, 0x61, 0x16, 0xa6, 0x4a, 0x6d, 0xaf, 0x76, 0xd0, 0x18, 0x72, 0xdc, 0x6f, 0x46, 0x6d, 0xa4,
	0x12, 0x69, 0x23, 0xa2, 0x1b, 0x6f, 0xe4, 0x15, 0x6c, 0x9b, 0x14, 0x0f, 0x91, 0x4f, 0xe6, 0xe8,
	0x8f, 0x7d, 0xb0, 0x88, 0x30, 0x78, 0x9e, 0xf5, 0x91, 0xc2, 0xbc, 0x97, 0x02, 0x9d, 0xbc, 0x20,
	0xb7, 0x7a, 0x01, 0x2d, 0x93, 0xe2, 0x97, 0xee, 0xfb, 0xd4, 0xa8, 0x68, 0x9a, 0xbf, 0x37, 0x11,
	0xe6, 0xda, 0x81, 0xb6, 0x28, 0xc4, 0x0d, 0x06, 0xf1, 0x5b, 0x46, 0x81, 0xf7, 0xef, 0x16, 0xc9,
	0x2b, 0x04, 0x29, 0x6e, 0xf2, 0x59, 0x8a, 0x57, 0xf7, 0x8c, 0xf8, 0x3e, 0x0a, 0xd8, 0x7f, 0x58,
	0x9d, 0xd8, 0xe0, 0x46, 0xc9, 0xa0, 0x93, 0xa5, 0x8a, 0x7d, 0x64, 0x3d, 0x3e, 0xf8, 0x5a, 0x87,
	0x9a, 0x49, 0xb1, 0xfc, 0x0e, 0xb6, 0x78, 0x2c, 0x6f, 0xea, 0xc5, 0x7f, 0x04, 0xba, 0x10, 0x2a,
	0xf5, 0xee, 0x1a, 0xa4, 0xcc, 0x45, 0xb6, 0x01, 0x84, 0xd8, 0xdd, 0x2e, 0x29, 0x5d, 0xd1, 0xd4,
	0xfb, 0x6b, 0xd1, 0xb8, 0x87, 0x03, 0xad, 0x5c, 0x02, 0xef, 0x94, 0x94, 0x8b, 0x44, 0xd5, 0x58,
	0x93, 0x28, 0x3a, 0xe5, 0xe2, 0x58, 0xe6, 0x24, 0x12, 0x4b, 0x9d, 0x8a, 0x22, 0x27, 0x23, 0x68,
	0x8a, 0x79, 0xdb, 0x2f, 0xa9, 0x17, 0x78, 0xaa, 0xbe, 0x1e, 0x8f, 0xdb, 0x9c, 0x40, 0x63, 0x95,
	0xb5, 0x5b, 0x25, 0xc5, 0x9c, 0xa5, 0xde, 0x5b, 0x87, 0x25, 0xbe, 0x43, 0xcc, 0xda, 0x7e, 0xe9,
	0xc4, 0x39, 0xaf, 0xf4, 0x1d, 0x05, 0x81, 0x8b, 0x16, 0x93, 0x0b, 0x5b, 0xd9, 0x62, 0x44, 0x62,
	0xe9, 0x62, 0x8a, 0x62, 0xa3, 0x6e, 0x7e, 0xbc, 0x3c, 0x3f, 0x94, 0x9e, 0x3e, 0xfa, 0xb6, 0xd0,
	0xa4, 0x8b, 0x85, 0x26, 0xfd, 0x58, 0x68, 0xd2, 0x97, 0xa5, 0x56, 0xb9, 0x58, 0x6a, 0x95, 0xef,
	0x4b, 0xad, 0xf2, 0x56, 0xc3, 0x2e, 0x73, 0x66, 0xb6, 0x3e, 0x26, 0xbe, 0x51, 0xf0, 0xdd, 0xb5,
	0xeb, 0xf1, 0x07, 0xf1, 0xe1, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1a, 0x82, 0x65, 0x55, 0x95,
	0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	InitUser(ctx context.Context, in *MsgInitUser, opts ...grpc.CallOption) (*MsgInitUserResponse, error)
	FollowUser(ctx context.Context, in *MsgFollowUser, opts ...grpc.CallOption) (*MsgFollowUserResponse, error)
	UnfollowUser(ctx context.Context, in *MsgUnfollowUser, opts ...grpc.CallOption) (*MsgUnfollowUserResponse, error)
	// CreateGame create a game.
	PublishTweet(ctx context.Context, in *MsgPublishTweet, opts ...grpc.CallOption) (*MsgPublishTweetResponse, error)
	RemoveTweet(ctx context.Context, in *MsgRemoveTweet, opts ...grpc.CallOption) (*MsgRemoveTweetResponse, error)
	LikeTweet(ctx context.Context, in *MsgLikeTweet, opts ...grpc.CallOption) (*MsgLikeTweetResponse, error)
	UnlikeTweet(ctx context.Context, in *MsgUnlikeTweet, opts ...grpc.CallOption) (*MsgUnlikeTweetResponse, error)
	CommentTweet(ctx context.Context, in *MsgCommentTweet, opts ...grpc.CallOption) (*MsgCommentTweetResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) InitUser(ctx context.Context, in *MsgInitUser, opts ...grpc.CallOption) (*MsgInitUserResponse, error) {
	out := new(MsgInitUserResponse)
	err := c.cc.Invoke(ctx, "/bitcolibri.birdFeed.v1.Msg/InitUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) FollowUser(ctx context.Context, in *MsgFollowUser, opts ...grpc.CallOption) (*MsgFollowUserResponse, error) {
	out := new(MsgFollowUserResponse)
	err := c.cc.Invoke(ctx, "/bitcolibri.birdFeed.v1.Msg/FollowUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UnfollowUser(ctx context.Context, in *MsgUnfollowUser, opts ...grpc.CallOption) (*MsgUnfollowUserResponse, error) {
	out := new(MsgUnfollowUserResponse)
	err := c.cc.Invoke(ctx, "/bitcolibri.birdFeed.v1.Msg/UnfollowUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PublishTweet(ctx context.Context, in *MsgPublishTweet, opts ...grpc.CallOption) (*MsgPublishTweetResponse, error) {
	out := new(MsgPublishTweetResponse)
	err := c.cc.Invoke(ctx, "/bitcolibri.birdFeed.v1.Msg/PublishTweet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveTweet(ctx context.Context, in *MsgRemoveTweet, opts ...grpc.CallOption) (*MsgRemoveTweetResponse, error) {
	out := new(MsgRemoveTweetResponse)
	err := c.cc.Invoke(ctx, "/bitcolibri.birdFeed.v1.Msg/RemoveTweet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) LikeTweet(ctx context.Context, in *MsgLikeTweet, opts ...grpc.CallOption) (*MsgLikeTweetResponse, error) {
	out := new(MsgLikeTweetResponse)
	err := c.cc.Invoke(ctx, "/bitcolibri.birdFeed.v1.Msg/LikeTweet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UnlikeTweet(ctx context.Context, in *MsgUnlikeTweet, opts ...grpc.CallOption) (*MsgUnlikeTweetResponse, error) {
	out := new(MsgUnlikeTweetResponse)
	err := c.cc.Invoke(ctx, "/bitcolibri.birdFeed.v1.Msg/UnlikeTweet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CommentTweet(ctx context.Context, in *MsgCommentTweet, opts ...grpc.CallOption) (*MsgCommentTweetResponse, error) {
	out := new(MsgCommentTweetResponse)
	err := c.cc.Invoke(ctx, "/bitcolibri.birdFeed.v1.Msg/CommentTweet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	InitUser(context.Context, *MsgInitUser) (*MsgInitUserResponse, error)
	FollowUser(context.Context, *MsgFollowUser) (*MsgFollowUserResponse, error)
	UnfollowUser(context.Context, *MsgUnfollowUser) (*MsgUnfollowUserResponse, error)
	// CreateGame create a game.
	PublishTweet(context.Context, *MsgPublishTweet) (*MsgPublishTweetResponse, error)
	RemoveTweet(context.Context, *MsgRemoveTweet) (*MsgRemoveTweetResponse, error)
	LikeTweet(context.Context, *MsgLikeTweet) (*MsgLikeTweetResponse, error)
	UnlikeTweet(context.Context, *MsgUnlikeTweet) (*MsgUnlikeTweetResponse, error)
	CommentTweet(context.Context, *MsgCommentTweet) (*MsgCommentTweetResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) InitUser(ctx context.Context, req *MsgInitUser) (*MsgInitUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitUser not implemented")
}
func (*UnimplementedMsgServer) FollowUser(ctx context.Context, req *MsgFollowUser) (*MsgFollowUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FollowUser not implemented")
}
func (*UnimplementedMsgServer) UnfollowUser(ctx context.Context, req *MsgUnfollowUser) (*MsgUnfollowUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnfollowUser not implemented")
}
func (*UnimplementedMsgServer) PublishTweet(ctx context.Context, req *MsgPublishTweet) (*MsgPublishTweetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishTweet not implemented")
}
func (*UnimplementedMsgServer) RemoveTweet(ctx context.Context, req *MsgRemoveTweet) (*MsgRemoveTweetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveTweet not implemented")
}
func (*UnimplementedMsgServer) LikeTweet(ctx context.Context, req *MsgLikeTweet) (*MsgLikeTweetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LikeTweet not implemented")
}
func (*UnimplementedMsgServer) UnlikeTweet(ctx context.Context, req *MsgUnlikeTweet) (*MsgUnlikeTweetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnlikeTweet not implemented")
}
func (*UnimplementedMsgServer) CommentTweet(ctx context.Context, req *MsgCommentTweet) (*MsgCommentTweetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentTweet not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_InitUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInitUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InitUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bitcolibri.birdFeed.v1.Msg/InitUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InitUser(ctx, req.(*MsgInitUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_FollowUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFollowUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).FollowUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bitcolibri.birdFeed.v1.Msg/FollowUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).FollowUser(ctx, req.(*MsgFollowUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UnfollowUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUnfollowUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UnfollowUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bitcolibri.birdFeed.v1.Msg/UnfollowUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UnfollowUser(ctx, req.(*MsgUnfollowUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PublishTweet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPublishTweet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PublishTweet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bitcolibri.birdFeed.v1.Msg/PublishTweet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PublishTweet(ctx, req.(*MsgPublishTweet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveTweet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveTweet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveTweet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bitcolibri.birdFeed.v1.Msg/RemoveTweet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveTweet(ctx, req.(*MsgRemoveTweet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_LikeTweet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgLikeTweet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).LikeTweet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bitcolibri.birdFeed.v1.Msg/LikeTweet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).LikeTweet(ctx, req.(*MsgLikeTweet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UnlikeTweet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUnlikeTweet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UnlikeTweet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bitcolibri.birdFeed.v1.Msg/UnlikeTweet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UnlikeTweet(ctx, req.(*MsgUnlikeTweet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CommentTweet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCommentTweet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CommentTweet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bitcolibri.birdFeed.v1.Msg/CommentTweet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CommentTweet(ctx, req.(*MsgCommentTweet))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bitcolibri.birdFeed.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InitUser",
			Handler:    _Msg_InitUser_Handler,
		},
		{
			MethodName: "FollowUser",
			Handler:    _Msg_FollowUser_Handler,
		},
		{
			MethodName: "UnfollowUser",
			Handler:    _Msg_UnfollowUser_Handler,
		},
		{
			MethodName: "PublishTweet",
			Handler:    _Msg_PublishTweet_Handler,
		},
		{
			MethodName: "RemoveTweet",
			Handler:    _Msg_RemoveTweet_Handler,
		},
		{
			MethodName: "LikeTweet",
			Handler:    _Msg_LikeTweet_Handler,
		},
		{
			MethodName: "UnlikeTweet",
			Handler:    _Msg_UnlikeTweet_Handler,
		},
		{
			MethodName: "CommentTweet",
			Handler:    _Msg_CommentTweet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bitcolibri/birdFeed/v1/tx.proto",
}

func (m *MsgInitUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Picture) > 0 {
		i -= len(m.Picture)
		copy(dAtA[i:], m.Picture)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Picture)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Alias) > 0 {
		i -= len(m.Alias)
		copy(dAtA[i:], m.Alias)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Alias)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInitUserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitUserResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitUserResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFollowUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFollowUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFollowUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.To) > 0 {
		i -= len(m.To)
		copy(dAtA[i:], m.To)
		i = encodeVarintTx(dAtA, i, uint64(len(m.To)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgFollowUserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFollowUserResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFollowUserResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUnfollowUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnfollowUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnfollowUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.To) > 0 {
		i -= len(m.To)
		copy(dAtA[i:], m.To)
		i = encodeVarintTx(dAtA, i, uint64(len(m.To)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUnfollowUserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnfollowUserResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnfollowUserResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgPublishTweet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPublishTweet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPublishTweet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Hashtags) > 0 {
		for iNdEx := len(m.Hashtags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Hashtags[iNdEx])
			copy(dAtA[i:], m.Hashtags[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Hashtags[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Author) > 0 {
		i -= len(m.Author)
		copy(dAtA[i:], m.Author)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Author)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPublishTweetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPublishTweetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPublishTweetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveTweet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveTweet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveTweet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TweetID) > 0 {
		i -= len(m.TweetID)
		copy(dAtA[i:], m.TweetID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TweetID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Author) > 0 {
		i -= len(m.Author)
		copy(dAtA[i:], m.Author)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Author)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveTweetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveTweetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveTweetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgLikeTweet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLikeTweet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLikeTweet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TweetID) > 0 {
		i -= len(m.TweetID)
		copy(dAtA[i:], m.TweetID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TweetID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgLikeTweetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLikeTweetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLikeTweetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUnlikeTweet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnlikeTweet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnlikeTweet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TweetID) > 0 {
		i -= len(m.TweetID)
		copy(dAtA[i:], m.TweetID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TweetID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUnlikeTweetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnlikeTweetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnlikeTweetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCommentTweet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCommentTweet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCommentTweet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TweetID) > 0 {
		i -= len(m.TweetID)
		copy(dAtA[i:], m.TweetID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TweetID)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Hashtags) > 0 {
		for iNdEx := len(m.Hashtags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Hashtags[iNdEx])
			copy(dAtA[i:], m.Hashtags[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Hashtags[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Author) > 0 {
		i -= len(m.Author)
		copy(dAtA[i:], m.Author)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Author)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCommentTweetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCommentTweetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCommentTweetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgInitUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Alias)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Picture)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgInitUserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFollowUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.To)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgFollowUserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUnfollowUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.To)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUnfollowUserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgPublishTweet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Author)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Hashtags) > 0 {
		for _, s := range m.Hashtags {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgPublishTweetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveTweet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Author)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TweetID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveTweetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgLikeTweet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TweetID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgLikeTweetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUnlikeTweet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TweetID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUnlikeTweetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCommentTweet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Author)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Hashtags) > 0 {
		for _, s := range m.Hashtags {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.TweetID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCommentTweetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgInitUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Alias", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Alias = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Picture", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Picture = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInitUserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitUserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitUserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFollowUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFollowUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFollowUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field To", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.To = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFollowUserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFollowUserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFollowUserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnfollowUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnfollowUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnfollowUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field To", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.To = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnfollowUserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnfollowUserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnfollowUserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPublishTweet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPublishTweet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPublishTweet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Author", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Author = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hashtags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hashtags = append(m.Hashtags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPublishTweetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPublishTweetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPublishTweetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveTweet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveTweet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveTweet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Author", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Author = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TweetID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TweetID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveTweetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveTweetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveTweetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLikeTweet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLikeTweet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLikeTweet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TweetID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TweetID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLikeTweetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLikeTweetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLikeTweetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnlikeTweet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnlikeTweet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnlikeTweet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TweetID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TweetID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnlikeTweetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnlikeTweetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnlikeTweetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCommentTweet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCommentTweet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCommentTweet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Author", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Author = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hashtags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hashtags = append(m.Hashtags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TweetID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TweetID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCommentTweetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCommentTweetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCommentTweetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
